package com.jojov.orderapi.security;

import java.util.Collection;
import java.util.List;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import com.jojov.orderapi.entity.User;

import io.jsonwebtoken.lang.Collections;
import lombok.AllArgsConstructor;

//validarlo del lado del servidor y injectar el usuario para poder luego recuperar 

@AllArgsConstructor
public class UserPrincipal implements UserDetails {

	
	private User user;
	//Coleccionde autorizaciones
	private Collection<? extends GrantedAuthority> authorities; 
	//generar metodo estatico que nos permita construir el objeto de forma mas sencilla
	public static UserPrincipal create(User user) {
		
		List<GrantedAuthority> authorities = Collections.singletonList();
	}
	//coleccion de autorizaciones
	@Override
	public Collection<? extends GrantedAuthority> getAuthorities() {
		// TODO Auto-generated method stub
	//definir o implementar los metodos que nos obliga a implementar la interfaz
	
		
		return authorities;
	}

	@Override
	public String getPassword() {

		user.getPassword();
	}

	@Override
	public String getUsername() {
		// TODO Auto-generated method stub
		return user.getUsername();
	}

	@Override
	public boolean isAccountNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public boolean isAccountNonLocked() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public boolean isCredentialsNonExpired() {
		// TODO Auto-generated method stub
		return true;
	}

	@Override
	public boolean isEnabled() {
		// TODO Auto-generated method stub
		return true;
	}

	
}
