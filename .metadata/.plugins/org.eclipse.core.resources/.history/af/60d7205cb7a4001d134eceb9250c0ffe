package com.usuario.service.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.usuario.service.UsuarioServiceApplication;
import com.usuario.service.entidades.User;
import com.usuario.service.modelos.Carro;
import com.usuario.service.modelos.Moto;
import com.usuario.service.service.UserService;

@RestController
@RequestMapping("/user")
public class UserController {

	@Autowired
	private UserService userService;
	
	@GetMapping
	public ResponseEntity<List<User>> listUsers(User user){
		List<User> users = userService.getAll(user);
		if(users.isEmpty()) {
			return ResponseEntity.noContent().build();
		}
		return ResponseEntity.ok(users);
	}
	
	@GetMapping("/{id}")
	public ResponseEntity<User> getUser(@PathVariable("id") int id){
		User user = userService.getUserById(id);
		if(user == null) {
			return ResponseEntity.notFound().build();
		}
		return ResponseEntity.ok(user);
	}
	
	@PostMapping
	public ResponseEntity<User> saveUser(@RequestBody User user){
		User newUser = userService.save(user);
		return ResponseEntity.ok(newUser);
	}
	
	@GetMapping("/carros/{usuarioId}")
	public ResponseEntity<List<Carro>> getCarros(@PathVariable("id") int id){		
		User usuario = userService.getUserById(id);
		if(usuario == null) {
			return ResponseEntity.notFound().build();
		}
		List<Carro> carros = userService.getCarros(id);
		return ResponseEntity.ok(carros);
	}
	
	@GetMapping("/motos/{usuarioId}")
	public ResponseEntity<List<Moto>> getMotos(@PathVariable("id") int id){		
		User usuario = userService.getUserById(id);
		if(usuario == null) {
			return ResponseEntity.notFound().build();
		}
		List<Moto> moto = userService.getMotos(id);
		return ResponseEntity.ok(moto);	
	} 
	@PostMapping("/carro/{usuarioId}")
	public ResponseEntity<Carro> guardarCarro(@PathVariable("usuarioId")int usuarioId, @RequestBody Carro carro ){
		Carro nuevoCarro = userService.saveCarro(usuarioId, carro);
		return ResponseEntity.ok(nuevoCarro);
	}
	@PostMapping("/carro/{usuarioId}")
	public ResponseEntity<Moto> guardarMoto(@PathVariable("usuarioId")int usuarioId, @RequestBody Moto moto ){
		Moto nuevoMoto = userService.saveMoto(usuarioId, moto);
		return ResponseEntity.ok(nuevoMoto);
	}
	
	@GetMapping("/todos/{usuarioId}")
	public ResponseEntity<Map<String, Object>> listarTodosLosVehiculos(@PathVariable("usuarioId")int usuarioId){
		Map<String, Object> resultado = userService.getUsuarioAndVehiculos(usuarioId);
	}
	
	
	
	
}
